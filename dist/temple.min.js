/*! Temple v0.0.1 | (c) 2014 @prayerslayer | MIT license | github.com/prayerslayer/temple.js */
!function(){"use strict";window.Temple=function Temple(){function save(a,b){return compiled[a]={render:function(a){return b.call(a)}},compiled[a]}function template(templateSelector){if(!templateSelector)throw new Error("No template provided");if(compiled[templateSelector])return console.log("using cached template",templateSelector),compiled[templateSelector];var text=document.querySelector(templateSelector).textContent;if(!text)throw new Error("Empty template");text=text.trim().replace(/\n/gi,"").replace(/\t/gi,"");var match=text.match(/(\{\{.*?\}\})/gi),compiler="function compiler( ) {";if(!match)return compiler+="return '"+text+"';}",save(templateSelector,eval("("+compiler+")"));compiler+=" var b=''; ";var matchIndex=0,startIndexInText=0;do{var matchIndexInText=text.indexOf(match[matchIndex]);compiler+="b += '"+text.substring(startIndexInText,matchIndexInText)+"'; ";var name=text.substr(matchIndexInText,match[matchIndex].length).replace(/[\{\}]*/gi,"").split(".");compiler+="b += this";for(var i=0;i<name.length;i++)compiler+="."+name[i];compiler+="; ",matchIndex++,startIndexInText=matchIndexInText+name.join(".").length+4}while(matchIndex<match.length);return compiler+="b += '"+text.substring(text.lastIndexOf("}}")+2,text.length)+"'; ",compiler+="return b;}",compiler="("+compiler+")",save(templateSelector,eval(compiler))}var compiled={};return{template:template}}}();